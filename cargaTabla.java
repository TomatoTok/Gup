package pruebasdemetodosyestructuras;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 * @author Tomato
 */
public class cargaTabla extends javax.swing.JFrame {

    DefaultTableModel tablaUsu = new DefaultTableModel();

    public cargaTabla() throws IOException {
        initComponents();
        setLocationRelativeTo(null);
        this.tblUsuario.setModel(tablaUsu);
        cargarDatos();
    }

    //MIS METODOS
    //Metodo de carga
    public void cargarDatos() throws FileNotFoundException, IOException {
        String cadena = "";
        int cantUsu = 0;
        DataInputStream aLeerM = new DataInputStream(new FileInputStream("C:\\Users\\Walter\\Desktop\\Tom\\Otros\\Informatica\\Proyectos\\GUP\\dataBase\\pruebaObjetoM.txt"));
            while (aLeerM.available() > 0) {
                cadena = cadena + aLeerM.readUTF();
            }
        cantUsu = contarCantDatos(cadena);
        String arrMail[] = new String[cantUsu];
        String arrUsu[] = new String[cantUsu];
        String arrContra[] = new String[cantUsu];
    //Se cargan los datos de los mails
        separarDatos(cadena, arrMail);
    //Se elimina el contenido de la cadena 
        cadena = "";
    //Se cargan los datos de los usuarios
        DataInputStream aLeerU = new DataInputStream(new FileInputStream("C:\\Users\\Walter\\Desktop\\Tom\\Otros\\Informatica\\Proyectos\\GUP\\dataBase\\pruebaObjetoU.txt"));
        while (aLeerU.available() > 0) {
            cadena = cadena + aLeerU.readUTF();
        }
        separarDatos(cadena, arrUsu);
        cadena = "";
    //Se cargan los datos de las contraseñas
        DataInputStream aLeerC = new DataInputStream(new FileInputStream("C:\\Users\\Walter\\Desktop\\Tom\\Otros\\Informatica\\Proyectos\\GUP\\dataBase\\pruebaObjetoC.txt"));
        while (aLeerC.available() > 0) {
            cadena = cadena + aLeerC.readUTF();
        }
        separarDatos(cadena, arrContra);
        this.tblUsuario.setModel(cargarFilas(arrMail, arrUsu, arrContra));
    }

    //Cuenta la cantidad de datos que posee el string
    public int contarCantDatos(String cadena) {
        int cont = 0, i = 0, total = cadena.length();
        while (i < total) {
            if (cadena.charAt(i) == '+') {
                cont = cont + 1;
                i = i + 1;
            } else {
                i = i + 1;
            }
        }
        return cont;
    }

    //Metodo que agrega a la tabla los componentes
    public DefaultTableModel cargarFilas(String arrM[], String arrU[], String arrC[]) {
        this.tablaUsu.addColumn("Correo");
        this.tablaUsu.addColumn("Usuario");
        this.tablaUsu.addColumn("Contraseña");

        for (int i = 0; i < arrM.length; i++) {
            tablaUsu.addRow(new Object[]{arrM[i], arrU[i], arrC[i]});
        }
        return tablaUsu;
    }

    //Metodo para separar el string en arreglos
    public void separarDatos(String cadena, String arrPal[]) throws FileNotFoundException {
        separador(arrPal, cadena);
    }

    //Metodo que te separa las palabras
    private void separador(String arrPal[], String cadena) {
        int i = 0;
        String pal = "";
        if(cadena==null || cadena.equalsIgnoreCase("")){}
        else{
        for (int j = 0; j < cadena.length(); j++) {
            if (cadena.charAt(j) == '+' || j == cadena.length() - 1) {
                arrPal[i] = pal;
                System.out.println(pal);
                pal = "";
                i = i + 1;
            } else {
                pal = pal + cadena.charAt(j);
            }
        }
    }}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsuario = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        lblCorreo = new javax.swing.JLabel();
        lblUsuario = new javax.swing.JLabel();
        lblContrasena = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        txtUsuario = new javax.swing.JTextField();
        txtContrasena = new javax.swing.JTextField();
        lblTablaUsu = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestor de usuarios (BETA v0.0)");

        tblUsuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUsuarioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblUsuario);

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnBorrar.setText("Borrar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        lblCorreo.setText("Correo:");

        lblUsuario.setText("Usuario:");

        lblContrasena.setText("Contraseña:");

        txtUsuario.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        lblTablaUsu.setText("Tabla usuarios");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblTablaUsu)
                .addContainerGap(535, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblContrasena)
                            .addComponent(lblUsuario))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCorreo)
                        .addGap(43, 43, 43)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtCorreo)
                    .addComponent(txtContrasena, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(txtUsuario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBorrar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(lblTablaUsu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCorreo)
                            .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUsuario)
                            .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblContrasena)
                            .addComponent(txtContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBorrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGuardar)))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleDescription("Gestor de usuarios personal dedicado");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        this.tablaUsu.addRow(new Object [] {this.txtCorreo.getText(),this.txtUsuario.getText(),this.txtContrasena.getText()});
        this.txtCorreo.setText("");
        this.txtUsuario.setText("");
        this.txtContrasena.setText("");
        txtCorreo.grabFocus();

    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
    int filaSel = tblUsuario.getSelectedRow();
        if (filaSel >= 0) {
        String arr [] = new String [3];
        arr[0]=txtCorreo.getText();
        arr[1]=txtUsuario.getText();
        arr[2]=txtContrasena.getText();
        for (int i = 0; i < tblUsuario.getColumnCount(); i++) {
            tablaUsu.setValueAt(arr[i], fila, i);
        }
        }else{
        JOptionPane.showMessageDialog(null,"Seleccione una fila.");
        }

    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        //Cartel de confirmacion eliminar
        int n = JOptionPane.showConfirmDialog(this, "¿Quieres borrar esto?","Borrar usuario", JOptionPane.YES_NO_OPTION);
        if (n == JOptionPane.YES_OPTION) {
        int filaSel = tblUsuario.getSelectedRow();
        if (filaSel >= 0) {
            tablaUsu.removeRow(filaSel);
        }else{
            //si no se ha seleccionado ninguna fila
        JOptionPane.showMessageDialog(null,"Seleccione una fila.");
        }
        this.txtCorreo.setText("");
        this.txtUsuario.setText("");
        this.txtContrasena.setText("");
        txtCorreo.grabFocus();
        }
       
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        int n = JOptionPane.showConfirmDialog(this, "¿Quieres guardar los datos?","Guardar", JOptionPane.YES_NO_OPTION);
        if (n == JOptionPane.YES_OPTION ) {
            //Creo los ficheros a almacenar
            DataOutputStream aGuardarUsu;
            DataOutputStream aGuardarMail;
            DataOutputStream aGuardarContra;
            try {
                aGuardarUsu = new DataOutputStream(new FileOutputStream ("C:\\Users\\Walter\\Desktop\\Tom\\Otros\\Informatica\\Proyectos\\GUP\\dataBase\\pruebaObjetoU.txt"));
                aGuardarMail = new DataOutputStream(new FileOutputStream ("C:\\Users\\Walter\\Desktop\\Tom\\Otros\\Informatica\\Proyectos\\GUP\\dataBase\\pruebaObjetoM.txt"));
                aGuardarContra = new DataOutputStream(new FileOutputStream ("C:\\Users\\Walter\\Desktop\\Tom\\Otros\\Informatica\\Proyectos\\GUP\\dataBase\\pruebaObjetoC.txt"));
            
            //Guardo los datos
                aGuardarUsu.writeUTF(recolectarDatosU());
                aGuardarUsu.close();
                aGuardarMail.writeUTF(recolectarDatosM());
                aGuardarMail.close();
                aGuardarContra.writeUTF(recolectarDatosC());
                aGuardarContra.close();
            
            } catch (FileNotFoundException ex) {
                Logger.getLogger(cargaTabla.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(cargaTabla.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnGuardarActionPerformed
    
    private String recolectarDatosM(){
    String cadena="";
     for (int i = 0; i < tblUsuario.getRowCount(); i++) {
      
            cadena=cadena+tablaUsu.getValueAt(i, 0).toString()+"+";
        }
        System.out.println(cadena);
    return cadena;
    }
      private String recolectarDatosU(){
    String cadena="";
     for (int i = 0; i < tblUsuario.getRowCount(); i++) {
         cadena=cadena+tablaUsu.getValueAt(i, 1).toString()+"+";
     }
             System.out.println(cadena);

    return cadena;
    }
    private String recolectarDatosC(){
    String cadena="";
     for (int i = 0; i < tblUsuario.getRowCount(); i++) {
            cadena=cadena+tablaUsu.getValueAt(i, 2).toString()+"+";
        }
             System.out.println(cadena);
    return cadena;
    }
    
    //Filas de la tabla
    private int fila;
    
    private void tblUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUsuarioMouseClicked
        int filaSel = tblUsuario.getSelectedRow();
        txtCorreo.setText(tablaUsu.getValueAt(filaSel, 0).toString());
        txtUsuario.setText(tablaUsu.getValueAt(filaSel,1).toString());
        txtContrasena.setText(tablaUsu.getValueAt(filaSel, 2).toString());
        //Aca enviamos la informacion de la fila seleccionada al boton de editar
        fila=filaSel;
    }//GEN-LAST:event_tblUsuarioMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cargaTabla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cargaTabla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cargaTabla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cargaTabla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new cargaTabla().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(cargaTabla.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblContrasena;
    private javax.swing.JLabel lblCorreo;
    private javax.swing.JLabel lblTablaUsu;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JTable tblUsuario;
    private javax.swing.JTextField txtContrasena;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
